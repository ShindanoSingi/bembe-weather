{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/bembe-weather/src/components/weatherPage.js\";\nimport React from \"react\";\n\nconst WeatherPage = ({\n  city,\n  state,\n  country,\n  weatherData\n}) => {\n  console.log(\"this is weather\");\n  console.log(weatherData);\n  let weekDays = weatherData.daily;\n  console.log(\"this is weekDays\");\n  console.log(weekDays);\n  let todayObject = new Date(); // eslint-disable-next-line\n  // Today\n  // eslint-disable-next-line\n\n  let today1 = todayObject.toString().substring(0, 3); // Tomorrow\n  // eslint-disable-next-line\n\n  let today0 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today0 = today0.toString().substring(0, 3); // Tomorrow\n  // eslint-disable-next-line\n\n  let today2 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today2 = today2.toString().substring(0, 3); // The day after tomorrow\n  // eslint-disable-next-line\n\n  let today3 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today3 = today3.toString().substring(0, 3); // The following day\n  // eslint-disable-next-line\n\n  let today4 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today4 = today4.toString().substring(0, 3); // The last day\n  // eslint-disable-next-line\n\n  let today5 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today5 = today5.toString().substring(0, 3); // The last day\n  // eslint-disable-next-line\n\n  let today6 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today6 = today6.toString().substring(0, 3); // The last day\n  // eslint-disable-next-line\n\n  let today7 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today7 = today7.toString().substring(0, 3);\n  return weatherData.length < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Bembe-Weather App\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"loading px-[2rem] text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"For US City: Enter the City, or City and State. For Other Country's City: Enter City, or City and Country's Code.\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bodyContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cityStateCountry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \" \", city, \", \", state, \", \", country, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, weekDays.map((day, index) => {\n    // Source https://www.youtube.com/watch?v=nGVoHEZojiQ\n    const dayAndDate = new Date(day.dt * 1000).toUTCString();\n    console.log(dayAndDate); // Retrieve specific information from the day.\n\n    const dayName = dayAndDate.substring(0, 3);\n    const month = new Date(day.dt * 1000).getMonth() + 1;\n    const dayDate = dayAndDate.substring(5, 7);\n    const year = dayAndDate.substring(12, 16); // Temperature conversion from Kelvin degrees to Fahrenheit degrees\n    // Min temp\n\n    let minTempF = parseInt(day.temp.min); // Max temp\n\n    let maxTempF = parseInt(day.temp.max); //Current temperature\n\n    let currentTempF = parseInt(weatherData.current.temp); // return one day/today\n\n    if (index === 0 && index !== 7) {\n      console.log(index);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"single1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon1\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"currentTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, currentTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, \"\\xB0\"))));\n    } else if (index === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, \"\\xB0\"))));\n    } else if (index === 2) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, \"\\xB0\"))));\n    } else if (index === 3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, \"\\xB0\"))));\n    } else if (index === 4) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 19\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      }, \"\\xB0\"))));\n    }\n  })));\n};\n\nexport default WeatherPage;","map":{"version":3,"sources":["/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/bembe-weather/src/components/weatherPage.js"],"names":["React","WeatherPage","city","state","country","weatherData","console","log","weekDays","daily","todayObject","Date","today1","toString","substring","today0","setDate","getDate","toUTCString","today2","today3","today4","today5","today6","today7","length","map","day","index","dayAndDate","dt","dayName","month","getMonth","dayDate","year","minTempF","parseInt","temp","min","maxTempF","max","currentTempF","current","weather","icon"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nconst WeatherPage = ({ city, state, country, weatherData }) => {\n  console.log(\"this is weather\")\n  console.log(weatherData)\n\n  let weekDays = weatherData.daily\n\n  console.log(\"this is weekDays\")\n  console.log(weekDays)\n\n  let todayObject = new Date()\n  // eslint-disable-next-line\n  // Today\n  // eslint-disable-next-line\n  let today1 = todayObject.toString().substring(0, 3)\n\n  // Tomorrow\n  // eslint-disable-next-line\n  let today0 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today0 = today0.toString().substring(0, 3)\n\n  // Tomorrow\n  // eslint-disable-next-line\n  let today2 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today2 = today2.toString().substring(0, 3)\n\n  // The day after tomorrow\n  // eslint-disable-next-line\n  let today3 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today3 = today3.toString().substring(0, 3)\n\n  // The following day\n  // eslint-disable-next-line\n  let today4 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today4 = today4.toString().substring(0, 3)\n\n  // The last day\n  // eslint-disable-next-line\n  let today5 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today5 = today5.toString().substring(0, 3)\n\n  // The last day\n  // eslint-disable-next-line\n  let today6 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today6 = today6.toString().substring(0, 3)\n\n  // The last day\n  // eslint-disable-next-line\n  let today7 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today7 = today7.toString().substring(0, 3)\n\n  return weatherData.length < 1 ? (\n    <div>\n      <h1>Bembe-Weather App</h1>\n\n      <div className=\"message\">\n        <p className=\"loading px-[2rem] text-red-500\">\n          For US City: Enter the City, or City and State. For Other Country's\n          City: Enter City, or City and Country's Code.\n        </p>\n      </div>\n      <br></br>\n      <br />\n      <br />\n    </div>\n  ) : (\n    <div className=\"bodyContainer\">\n      {/* Display the city */}\n      <div className=\"cityStateCountry\">\n        {\" \"}\n        {city}, {state}, {country}{\" \"}\n      </div>\n\n      <div className=\"weatherContainer\">\n        {weekDays.map((day, index) => {\n          // Source https://www.youtube.com/watch?v=nGVoHEZojiQ\n          const dayAndDate = new Date(day.dt * 1000).toUTCString()\n          console.log(dayAndDate)\n\n          // Retrieve specific information from the day.\n          const dayName = dayAndDate.substring(0, 3)\n          const month = new Date(day.dt * 1000).getMonth() + 1\n          const dayDate = dayAndDate.substring(5, 7)\n          const year = dayAndDate.substring(12, 16)\n\n          // Temperature conversion from Kelvin degrees to Fahrenheit degrees\n          // Min temp\n          let minTempF = parseInt(day.temp.min)\n\n          // Max temp\n          let maxTempF = parseInt(day.temp.max)\n\n          //Current temperature\n          let currentTempF = parseInt(weatherData.current.temp)\n\n          // return one day/today\n          if (index === 0 && index !== 7) {\n            console.log(index)\n            return (\n              <div key={index} className=\"today1\">\n                <p className=\"single1\">{dayName}</p>\n                <p className=\"date1\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon1\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <p className=\"currentTemp\">\n                  {currentTempF}\n                  <span>&#176;</span>\n                </p>\n\n                <div className=\"temp1\">\n                  <p className=\"maxTemp1\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp1\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          } else if (index === 1) {\n            return (\n              <div key={index} className=\"today2\">\n                <p className=\"singleDayH1\">{dayName}</p>\n                <p className=\"date\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <div className=\"temp\">\n                  <p className=\"maxTemp\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          } else if (index === 2) {\n            return (\n              <div key={index} className=\"today3\">\n                <p className=\"singleDayH1\">{dayName}</p>\n                <p className=\"date\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <div className=\"temp\">\n                  <p className=\"maxTemp\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          } else if (index === 3) {\n            return (\n              <div key={index} className=\"today4\">\n                <p className=\"singleDayH1\">{dayName}</p>\n                <p className=\"date\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <div className=\"temp\">\n                  <p className=\"maxTemp\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          } else if (index === 4) {\n            return (\n              <div key={index} className=\"today5\">\n                <p className=\"singleDayH1\">{dayName}</p>\n                <p className=\"date\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <div className=\"temp\">\n                  <p className=\"maxTemp\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          }\n        }\n        )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default WeatherPage\n"]},"metadata":{},"sourceType":"module"}