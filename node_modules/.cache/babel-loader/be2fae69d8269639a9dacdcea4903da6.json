{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/bembe-weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport WeatherPage from \"./components/weatherPage\";\nimport SearchForm from \"./components/SearchForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Initialize variables using \"useSates\"\n  const [weatherData, setWeatherData] = useState([]);\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [country, setCountry] = useState(\"\"); // These hold values a little bit longer\n\n  const [cityDisplayed, setCityDisplayed] = useState(\"\");\n  const [stateDisplayed, setStateDisplayed] = useState(\"\");\n  const [countryDisplayed, setCountryDisplayed] = useState(\"\"); // Create an object that will hold keys to be used in the fetch fnctions.\n\n  const searchLatLon = {\n    key: process.env.REACT_APP_GIPHY_KEY,\n    cityName: city,\n    stateCode: \"\",\n    country: \"\",\n    limit: 1,\n    api: \"https://api.openweathermap.org/geo/1.0/direct?q=\"\n  };\n  let searchOptions = {\n    key: process.env.REACT_APP_GIPHY_KEY,\n    api: \"https://api.openweathermap.org/data/2.5/onecall?\"\n  }; // Create handleChange function to capture input value for city from the form.\n\n  function handleChangeCity(event) {\n    setCity(event.target.value);\n  } // Create handleChange function to capture input value for city from the form.\n\n\n  function handleChangeState(event) {\n    setState(event.target.value);\n  } // Create handleChange function to capture input value for country from the form.\n\n\n  function handleChangeCountry(event) {\n    setCountry(event.target.value);\n  } // Create a handleSubmit function to send the input value to the getLatLon function.\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    getLatLon(city, state, country);\n    setCity(\"\");\n    setState(\"\");\n    setCountry(\"\");\n  } // useEffect function\n\n\n  useEffect(() => {\n    getLatLon();\n    setCity(\"\");\n    setState(\"\");\n    setCountry(\"\"); // eslint-disable-next-line\n  }, []); // This function below takes two parameters: city and country's code, and spits latitude and longitude out. Then, the next fetch takes the lat and lon, and spits eather data for eight days.\n\n  function getLatLon(city, state, country) {\n    fetch(`${searchLatLon.api}${city},${state},${country}&limit=${searchLatLon.limit}&appid=${searchLatLon.key}`).then(result => result.json()).then(data => {\n      // console.log(data[0])\n      if (data[0]) {\n        fetch(`${searchOptions.api}lat=${data[0].lat}&lon=${data[0].lon}&exclude=minutely,hourly&appid=${searchOptions.key}&units=imperial`).then(result => result.json()).then(result => {\n          setCityDisplayed(data[0].name);\n          setStateDisplayed(data[0].state);\n          setCountryDisplayed(data[0].country);\n          setWeatherData(result);\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-blue-800\",\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherPage, {\n      weatherData: weatherData,\n      city: cityDisplayed,\n      state: stateDisplayed,\n      country: countryDisplayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      city: city,\n      state: state,\n      country: country,\n      handleChangeCity: handleChangeCity,\n      handleChangeState: handleChangeState,\n      handleChangeCountry: handleChangeCountry,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HjNfpLDNjvya8hi4QlaCK++c/+4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WeatherPage","SearchForm","App","weatherData","setWeatherData","city","setCity","state","setState","country","setCountry","cityDisplayed","setCityDisplayed","stateDisplayed","setStateDisplayed","countryDisplayed","setCountryDisplayed","searchLatLon","key","process","env","REACT_APP_GIPHY_KEY","cityName","stateCode","limit","api","searchOptions","handleChangeCity","event","target","value","handleChangeState","handleChangeCountry","handleSubmit","preventDefault","getLatLon","fetch","then","result","json","data","lat","lon","name"],"sources":["/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/bembe-weather/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport \"./App.css\"\nimport WeatherPage from \"./components/weatherPage\"\nimport SearchForm from \"./components/SearchForm\"\n\nfunction App() {\n  // Initialize variables using \"useSates\"\n  const [weatherData, setWeatherData] = useState([])\n\n  const [city, setCity] = useState(\"\")\n  const [state, setState] = useState(\"\")\n  const [country, setCountry] = useState(\"\")\n\n  // These hold values a little bit longer\n  const [cityDisplayed, setCityDisplayed] = useState(\"\")\n  const [stateDisplayed, setStateDisplayed] = useState(\"\")\n  const [countryDisplayed, setCountryDisplayed] = useState(\"\")\n\n  // Create an object that will hold keys to be used in the fetch fnctions.\n  const searchLatLon = {\n    key: process.env.REACT_APP_GIPHY_KEY,\n    cityName: city,\n    stateCode: \"\",\n    country: \"\",\n    limit: 1,\n    api: \"https://api.openweathermap.org/geo/1.0/direct?q=\",\n  }\n\n  let searchOptions = {\n    key: process.env.REACT_APP_GIPHY_KEY,\n    api: \"https://api.openweathermap.org/data/2.5/onecall?\",\n  }\n\n  // Create handleChange function to capture input value for city from the form.\n  function handleChangeCity(event) {\n    setCity(event.target.value)\n  }\n\n  // Create handleChange function to capture input value for city from the form.\n  function handleChangeState(event) {\n    setState(event.target.value)\n  }\n\n  // Create handleChange function to capture input value for country from the form.\n  function handleChangeCountry(event) {\n    setCountry(event.target.value)\n  }\n\n  // Create a handleSubmit function to send the input value to the getLatLon function.\n  function handleSubmit(event) {\n    event.preventDefault()\n    getLatLon(city, state, country)\n    setCity(\"\")\n    setState(\"\")\n    setCountry(\"\")\n  }\n\n  // useEffect function\n  useEffect(() => {\n    getLatLon()\n    setCity(\"\")\n    setState(\"\")\n    setCountry(\"\")\n    // eslint-disable-next-line\n  }, [])\n\n  // This function below takes two parameters: city and country's code, and spits latitude and longitude out. Then, the next fetch takes the lat and lon, and spits eather data for eight days.\n\n  function getLatLon(city, state, country) {\n    fetch(\n      `${searchLatLon.api}${city},${state},${country}&limit=${searchLatLon.limit}&appid=${searchLatLon.key}`\n    )\n      .then((result) => result.json())\n      .then((data) => {\n        // console.log(data[0])\n        if (data[0]) {\n          fetch(\n            `${searchOptions.api}lat=${data[0].lat}&lon=${data[0].lon}&exclude=minutely,hourly&appid=${searchOptions.key}&units=imperial`\n          )\n            .then((result) => result.json())\n            .then((result) => {\n              setCityDisplayed(data[0].name)\n              setStateDisplayed(data[0].state)\n              setCountryDisplayed(data[0].country)\n              setWeatherData(result)\n            })\n        }\n      })\n  }\n\n  return (\n\n    <div className=\"bg-black\">\n      {/* Weather data */}\n      <h2 className=\"text-blue-800\">Hello</h2>\n      <WeatherPage\n        weatherData={weatherData}\n        city={cityDisplayed}\n        state={stateDisplayed}\n        country={countryDisplayed}\n      />\n\n      {/* Search form */}\n      <SearchForm\n        city={city}\n        state={state}\n        country={country}\n        handleChangeCity={handleChangeCity}\n        handleChangeState={handleChangeState}\n        handleChangeCountry={handleChangeCountry}\n        handleSubmit={handleSubmit}\n      />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}