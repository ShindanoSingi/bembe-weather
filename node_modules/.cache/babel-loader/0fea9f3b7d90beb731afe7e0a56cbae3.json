{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/bembe-weather/src/components/weatherPage.js\";\nimport React from 'react';\nimport SearchForm from './SearchForm';\n\nconst WeatherPage = ({\n  city,\n  state,\n  country,\n  weatherData\n}) => {\n  console.log('this is weather');\n  console.log(weatherData);\n  let weekDays = weatherData.daily;\n  console.log('this is weekDays');\n  console.log(weekDays);\n  let todayObject = new Date(); // Today\n\n  let today1 = todayObject.toString().substring(0, 3); // Tomorrow\n\n  let today0 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today0 = today0.toString().substring(0, 3); // Tomorrow\n\n  let today2 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today2 = today2.toString().substring(0, 3); // The day after tomorrow\n\n  let today3 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today3 = today3.toString().substring(0, 3); // The following day\n\n  let today4 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today4 = today4.toString().substring(0, 3); // The last day\n\n  let today5 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today5 = today5.toString().substring(0, 3); // The last day\n\n  let today6 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today6 = today6.toString().substring(0, 3); // The last day\n\n  let today7 = new Date(todayObject.setDate(todayObject.getDate() + 1)).toUTCString();\n  today7 = today7.toString().substring(0, 3);\n  console.log('today 0' + today0);\n  console.log('today 1' + today1);\n  console.log('today 2' + today2);\n  console.log('today 3' + today3);\n  console.log('today 4' + today4);\n  console.log('today 5' + today5);\n  console.log('today 6' + today6);\n  console.log('today 7' + today7);\n  return weatherData.length < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"For US City: Enter the City, or City and State. For Other Country's City: Enter City, or City and Country's Code.\")), /*#__PURE__*/React.createElement(SearchForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bodyContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cityStateCountry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, ' ', city, \", \", state, \", \", country, ' '), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, weekDays.map((day, index) => {\n    // Source https://www.youtube.com/watch?v=nGVoHEZojiQ\n    const dayAndDate = new Date(day.dt * 1000).toUTCString();\n    console.log(dayAndDate); // Retrieve specific information from the day.\n\n    const dayName = dayAndDate.substring(0, 3);\n    const month = new Date(day.dt * 1000).getMonth() + 1;\n    const dayDate = dayAndDate.substring(5, 7);\n    const year = dayAndDate.substring(12, 16); // Temperature conversion from Kelvin degrees to Fahrenheit degrees\n    // Min temp\n\n    let minTempF = parseInt(day.temp.min); // Max temp\n\n    let maxTempF = parseInt(day.temp.max); //Current temperature\n\n    let currentTempF = parseInt(weatherData.current.temp); // return one day/today\n\n    if (index === 0 && index !== 7) {\n      console.log(index);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"currentTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, currentTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, \"\\xB0\"))));\n    } else if (index === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, \"\\xB0\"))));\n    } else if (index === 2) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }, \"\\xB0\"))));\n    } else if (index === 3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }, \"\\xB0\"))));\n    } else if (index === 4) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"today5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"singleDayH1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }, dayName), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, month, \"/\", dayDate, \"/\", year), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"maxTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, maxTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }\n      }, \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"minTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, minTempF, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }\n      }, \"\\xB0\"))));\n    }\n  })));\n};\n\nexport default WeatherPage;","map":{"version":3,"sources":["/Users/mymac/Desktop/GeneralAssembly/Post-Graduation-Projects/bembe-weather/src/components/weatherPage.js"],"names":["React","SearchForm","WeatherPage","city","state","country","weatherData","console","log","weekDays","daily","todayObject","Date","today1","toString","substring","today0","setDate","getDate","toUTCString","today2","today3","today4","today5","today6","today7","length","map","day","index","dayAndDate","dt","dayName","month","getMonth","dayDate","year","minTempF","parseInt","temp","min","maxTempF","max","currentTempF","current","weather","icon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SearchForm from './SearchForm'\n\n\nconst WeatherPage = ({ city, state, country, weatherData }) => {\n    console.log('this is weather')\n    console.log(weatherData)\n\n    let weekDays = weatherData.daily\n\n    console.log('this is weekDays')\n    console.log(weekDays)\n\n    let todayObject = new Date()\n\n    // Today\n    let today1 = todayObject.toString().substring(0, 3)\n\n    // Tomorrow\n    let today0 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1),\n    ).toUTCString()\n    today0 = today0.toString().substring(0, 3)\n\n    // Tomorrow\n    let today2 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1),\n    ).toUTCString()\n    today2 = today2.toString().substring(0, 3)\n\n    // The day after tomorrow\n    let today3 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1),\n    ).toUTCString()\n    today3 = today3.toString().substring(0, 3)\n\n    // The following day\n    let today4 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1),\n    ).toUTCString()\n    today4 = today4.toString().substring(0, 3)\n\n    // The last day\n    let today5 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1),\n    ).toUTCString()\n    today5 = today5.toString().substring(0, 3)\n\n    // The last day\n    let today6 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1),\n    ).toUTCString()\n    today6 = today6.toString().substring(0, 3)\n\n    // The last day\n    let today7 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1),\n    ).toUTCString()\n    today7 = today7.toString().substring(0, 3)\n\n    console.log('today 0' + today0)\n    console.log('today 1' + today1)\n    console.log('today 2' + today2)\n    console.log('today 3' + today3)\n    console.log('today 4' + today4)\n    console.log('today 5' + today5)\n    console.log('today 6' + today6)\n    console.log('today 7' + today7)\n\n    return weatherData.length < 1 ? (\n        <div>\n            <div className=\"message\">\n            <p className=\"loading\">\n                For US City: Enter the City, or City and State. For Other Country's City:\n                Enter City, or City and Country's Code.\n            </p>\n\n        </div>\n        <SearchForm/>\n        </div>\n\n    ) : (\n        <div className=\"bodyContainer\">\n        {/* Display the city */}\n        <div className=\"cityStateCountry\">\n        {' '}\n        {city}, {state}, {country}{' '}\n        </div>\n\n        <div className=\"weatherContainer\">\n            {weekDays.map((day, index) => {\n            // Source https://www.youtube.com/watch?v=nGVoHEZojiQ\n            const dayAndDate = new Date(day.dt * 1000).toUTCString()\n            console.log(dayAndDate)\n\n            // Retrieve specific information from the day.\n            const dayName = dayAndDate.substring(0, 3)\n            const month = new Date(day.dt * 1000).getMonth() + 1\n            const dayDate = dayAndDate.substring(5, 7)\n            const year = dayAndDate.substring(12, 16)\n\n            // Temperature conversion from Kelvin degrees to Fahrenheit degrees\n            // Min temp\n            let minTempF = parseInt(day.temp.min)\n\n            // Max temp\n            let maxTempF = parseInt(day.temp.max)\n\n            //Current temperature\n            let currentTempF = parseInt(weatherData.current.temp)\n\n            // return one day/today\n            if (index === 0 && index !== 7) {\n                console.log(index)\n                return (\n                <div key={index} className=\"today1\">\n                    <p className=\"singleDayH1\">{dayName}</p>\n                    <p className=\"date\">\n                    {month}/{dayDate}/{year}\n                    </p>\n\n                    <img\n                    className=\"icon\"\n                    src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                    alt=\"\"\n                    />\n\n                    <p className=\"currentTemp\">\n                    {currentTempF}\n                    <span>&#176;</span>\n                    </p>\n\n                    <div className=\"temp\">\n                    <p className=\"maxTemp\">\n                        {maxTempF}\n                        <span>&#176;</span>\n                    </p>\n                    <p className=\"minTemp\">\n                        {minTempF}\n                        <span>&#176;</span>\n                    </p>\n                    </div>\n                </div>\n                )\n            } else if (index === 1) {\n                return (\n                <div key={index} className=\"today2\">\n                    <p className=\"singleDayH1\">{dayName}</p>\n                    <p className=\"date\">\n                    {month}/{dayDate}/{year}\n                    </p>\n\n                    <img\n                    className=\"icon\"\n                    src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                    alt=\"\"\n                    />\n\n                    <div className=\"temp\">\n                    <p className=\"maxTemp\">\n                        {maxTempF}\n                        <span>&#176;</span>\n                    </p>\n                    <p className=\"minTemp\">\n                        {minTempF}\n                        <span>&#176;</span>\n                    </p>\n                    </div>\n                </div>\n                )\n            } else if (index === 2) {\n                return (\n                <div key={index} className=\"today3\">\n                    <p className=\"singleDayH1\">{dayName}</p>\n                    <p className=\"date\">\n                    {month}/{dayDate}/{year}\n                    </p>\n\n                    <img\n                    className=\"icon\"\n                    src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                    alt=\"\"\n                    />\n\n                    <div className=\"temp\">\n                    <p className=\"maxTemp\">\n                        {maxTempF}\n                        <span>&#176;</span>\n                    </p>\n                    <p className=\"minTemp\">\n                        {minTempF}\n                        <span>&#176;</span>\n                    </p>\n                    </div>\n                </div>\n                )\n            } else if (index === 3) {\n                return (\n                <div key={index} className=\"today4\">\n                    <p className=\"singleDayH1\">{dayName}</p>\n                    <p className=\"date\">\n                    {month}/{dayDate}/{year}\n                    </p>\n\n                    <img\n                    className=\"icon\"\n                    src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                    alt=\"\"\n                    />\n\n                    <div className=\"temp\">\n                    <p className=\"maxTemp\">\n                        {maxTempF}\n                        <span>&#176;</span>\n                    </p>\n                    <p className=\"minTemp\">\n                        {minTempF}\n                        <span>&#176;</span>\n                    </p>\n                    </div>\n                </div>\n                )\n            } else if (index === 4) {\n                return (\n                <div key={index} className=\"today5\">\n                    <p className=\"singleDayH1\">{dayName}</p>\n                    <p className=\"date\">\n                    {month}/{dayDate}/{year}\n                    </p>\n\n                    <img\n                    className=\"icon\"\n                    src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                    alt=\"\"\n                    />\n\n                    <div className=\"temp\">\n                    <p className=\"maxTemp\">\n                        {maxTempF}\n                        <span>&#176;</span>\n                    </p>\n                    <p className=\"minTemp\">\n                        {minTempF}\n                        <span>&#176;</span>\n                    </p>\n                    </div>\n                </div>\n                )\n            }\n            })}\n        </div>\n        </div>\n    )\n    }\n\nexport default WeatherPage\n"]},"metadata":{},"sourceType":"module"}