{"version":3,"sources":["components/weatherPage.js","components/SearchForm.js","App.js","index.js"],"names":["WeatherPage","city","state","country","weatherData","console","log","weekDays","daily","todayObject","Date","today0","toString","substring","setDate","getDate","toUTCString","today2","today3","today4","today5","today6","today7","length","className","map","day","index","dayAndDate","dt","dayName","month","getMonth","dayDate","year","minTempF","parseInt","temp","min","maxTempF","max","currentTempF","current","key","src","weather","icon","alt","SearchForm","handleSubmit","handleChangeCity","handleChangeState","handleChangeCountry","onSubmit","placeholder","type","name","onChange","value","required","App","useState","setWeatherData","setCity","setState","setCountry","cityDisplayed","setCityDisplayed","stateDisplayed","setStateDisplayed","countryDisplayed","setCountryDisplayed","searchLatLon","process","searchOptions","getLatLon","a","fetch","mode","then","result","json","data","lat","lon","useEffect","event","target","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54a1f1de.chunk.js","sourcesContent":["import React from \"react\"\n\nconst WeatherPage = ({ city, state, country, weatherData }) => {\n  console.log(\"this is weather\")\n  console.log(weatherData)\n\n  let weekDays = weatherData.daily\n\n  console.log(\"this is weekDays\")\n  console.log(weekDays)\n\n  let todayObject = new Date()\n\n  // Today\n  let today1 = todayObject.toString().substring(0, 3)\n\n  // Tomorrow\n  let today0 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today0 = today0.toString().substring(0, 3)\n\n  // Tomorrow\n  let today2 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today2 = today2.toString().substring(0, 3)\n\n  // The day after tomorrow\n  let today3 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today3 = today3.toString().substring(0, 3)\n\n  // The following day\n  let today4 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today4 = today4.toString().substring(0, 3)\n\n  // The last day\n  let today5 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today5 = today5.toString().substring(0, 3)\n\n  // The last day\n  let today6 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today6 = today6.toString().substring(0, 3)\n\n  // The last day\n  let today7 = new Date(\n    todayObject.setDate(todayObject.getDate() + 1)\n  ).toUTCString()\n  today7 = today7.toString().substring(0, 3)\n\n  //   console.log(\"today 0\" + today0)\n  //   console.log(\"today 1\" + today1)\n  //   console.log(\"today 2\" + today2)\n  //   console.log(\"today 3\" + today3)\n  //   console.log(\"today 4\" + today4)\n  //   console.log(\"today 5\" + today5)\n  //   console.log(\"today 6\" + today6)\n  //   console.log(\"today 7\" + today7)\n\n  return weatherData.length < 1 ? (\n    <div>\n      <h1>Bembe-Weather App</h1>\n\n      <div className=\"message\">\n        <p className=\"loading\">\n          For US City: Enter the City, or City and State. For Other Country's\n          City: Enter City, or City and Country's Code.\n        </p>\n      </div>\n      <br></br>\n      <br />\n      <br />\n    </div>\n  ) : (\n    <div className=\"bodyContainer\">\n      {/* Display the city */}\n      <div className=\"cityStateCountry\">\n        {\" \"}\n        {city}, {state}, {country}{\" \"}\n      </div>\n\n      <div className=\"weatherContainer\">\n        {weekDays.map((day, index) => {\n          // Source https://www.youtube.com/watch?v=nGVoHEZojiQ\n          const dayAndDate = new Date(day.dt * 1000).toUTCString()\n          console.log(dayAndDate)\n\n          // Retrieve specific information from the day.\n          const dayName = dayAndDate.substring(0, 3)\n          const month = new Date(day.dt * 1000).getMonth() + 1\n          const dayDate = dayAndDate.substring(5, 7)\n          const year = dayAndDate.substring(12, 16)\n\n          // Temperature conversion from Kelvin degrees to Fahrenheit degrees\n          // Min temp\n          let minTempF = parseInt(day.temp.min)\n\n          // Max temp\n          let maxTempF = parseInt(day.temp.max)\n\n          //Current temperature\n          let currentTempF = parseInt(weatherData.current.temp)\n\n          // return one day/today\n          if (index === 0 && index !== 7) {\n            console.log(index)\n            return (\n              <div key={index} className=\"today1\">\n                <p className=\"single1\">{dayName}</p>\n                <p className=\"date1\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon1\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <p className=\"currentTemp\">\n                  {currentTempF}\n                  <span>&#176;</span>\n                </p>\n\n                <div className=\"temp1\">\n                  <p className=\"maxTemp1\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp1\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          } else if (index === 1) {\n            return (\n              <div key={index} className=\"today2\">\n                <p className=\"singleDayH1\">{dayName}</p>\n                <p className=\"date\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <div className=\"temp\">\n                  <p className=\"maxTemp\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          } else if (index === 2) {\n            return (\n              <div key={index} className=\"today3\">\n                <p className=\"singleDayH1\">{dayName}</p>\n                <p className=\"date\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <div className=\"temp\">\n                  <p className=\"maxTemp\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          } else if (index === 3) {\n            return (\n              <div key={index} className=\"today4\">\n                <p className=\"singleDayH1\">{dayName}</p>\n                <p className=\"date\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <div className=\"temp\">\n                  <p className=\"maxTemp\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          } else if (index === 4) {\n            return (\n              <div key={index} className=\"today5\">\n                <p className=\"singleDayH1\">{dayName}</p>\n                <p className=\"date\">\n                  {month}/{dayDate}/{year}\n                </p>\n\n                <img\n                  className=\"icon\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                  alt=\"\"\n                />\n\n                <div className=\"temp\">\n                  <p className=\"maxTemp\">\n                    {maxTempF}\n                    <span>&#176;</span>\n                  </p>\n                  <p className=\"minTemp\">\n                    {minTempF}\n                    <span>&#176;</span>\n                  </p>\n                </div>\n              </div>\n            )\n          }\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default WeatherPage\n","import React from \"react\";\n\nconst SearchForm = ({\n  city,\n  state,\n  country,\n  handleSubmit,\n  handleChangeCity,\n  handleChangeState,\n  handleChangeCountry,\n}) => {\n  return (\n    <div className=\"navbar navbar-dark bg-primary\">\n      <form onSubmit={handleSubmit} className=\"d-flex form-container\">\n        {/* City Input */}\n        <input\n          className=\"cityInput\"\n          placeholder=\"Type the city\"\n          type=\"text\"\n          name=\"SearchString\"\n          onChange={handleChangeCity}\n          value={city}\n          required\n        />\n\n        {/* Country input */}\n        <input\n          className=\"countryInput\"\n          placeholder=\"Type the state\"\n          type=\"text\"\n          name=\"SearchString\"\n          onChange={handleChangeState}\n          value={state}\n        />\n\n        {/* Country input */}\n        <input\n          className=\"countryInput\"\n          placeholder=\"Type the country code (TZ, CD...)\"\n          type=\"text\"\n          name=\"SearchString\"\n          onChange={handleChangeCountry}\n          value={country}\n        />\n\n        <button className=\"submitButton\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from \"react\"\nimport \"./App.css\"\nimport WeatherPage from \"./components/weatherPage\"\nimport SearchForm from \"./components/SearchForm\"\n\nfunction App() {\n  // Initialize variables using \"useSates\"\n  const [weatherData, setWeatherData] = useState([])\n\n  const [city, setCity] = useState(\"\")\n  const [state, setState] = useState(\"\")\n  const [country, setCountry] = useState(\"\")\n\n  // These hold values a little bit longer\n  const [cityDisplayed, setCityDisplayed] = useState(\"\")\n  const [stateDisplayed, setStateDisplayed] = useState(\"\")\n  const [countryDisplayed, setCountryDisplayed] = useState(\"\")\n\n  // Create an object that will hold keys to be used in the fetch fnctions.\n  const searchLatLon = {\n    key: process.env.REACT_APP_GIPHY_KEY,\n    cityName: city,\n    stateCode: \"\",\n    country: \"\",\n    limit: 1,\n    api: \"http://api.openweathermap.org/geo/1.0/direct?q=\",\n  }\n\n  let searchOptions = {\n    key: process.env.REACT_APP_GIPHY_KEY,\n    api: \"https://api.openweathermap.org/data/2.5/onecall?\",\n  }\n\n  // Create handleChange function to capture input value for city from the form.\n  function handleChangeCity(event) {\n    setCity(event.target.value)\n  }\n\n  // Create handleChange function to capture input value for city from the form.\n  function handleChangeState(event) {\n    setState(event.target.value)\n  }\n\n  // Create handleChange function to capture input value for country from the form.\n  function handleChangeCountry(event) {\n    setCountry(event.target.value)\n  }\n\n  // Create a handleSubmit function to send the input value to the getLatLon function.\n  function handleSubmit(event) {\n    event.preventDefault()\n    getLatLon(city, state, country)\n    setCity(\"\")\n    setState(\"\")\n    setCountry(\"\")\n  }\n\n  // useEffect function\n  useEffect(() => {\n    getLatLon()\n    setCity(\"\")\n    setState(\"\")\n    setCountry(\"\")\n    // eslint-disable-next-line\n  }, [])\n\n  // This function below takes two parameters: city and country's code, and spits latitude and longitude out. Then, the next fetch takes the lat and lon, and spits eather data for eight days.\n\n  async function getLatLon(city, state, country) {\n    await fetch(\n      `${searchLatLon.api}${city},${state},${country}&limit=${searchLatLon.limit}&appid=${searchLatLon.key}`,\n      {\n        mode: \"no-cors\",\n      }\n    )\n      .then((result) => result.json())\n      .then((data) => {\n        // console.log(data[0])\n        if (data[0]) {\n          fetch(\n            `${searchOptions.api}lat=${data[0].lat}&lon=${data[0].lon}&exclude=minutely,hourly&appid=${searchOptions.key}&units=imperial`\n          )\n            .then((result) => result.json())\n            .then((result) => {\n              setCityDisplayed(data[0].name)\n              setStateDisplayed(data[0].state)\n              setCountryDisplayed(data[0].country)\n              setWeatherData(result)\n            })\n        }\n      })\n  }\n\n  return (\n    <div>\n      {/* Weather data */}\n      <WeatherPage\n        weatherData={weatherData}\n        city={cityDisplayed}\n        state={stateDisplayed}\n        country={countryDisplayed}\n      />\n\n      {/* Search form */}\n      <SearchForm\n        city={city}\n        state={state}\n        country={country}\n        handleChangeCity={handleChangeCity}\n        handleChangeState={handleChangeState}\n        handleChangeCountry={handleChangeCountry}\n        handleSubmit={handleSubmit}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}